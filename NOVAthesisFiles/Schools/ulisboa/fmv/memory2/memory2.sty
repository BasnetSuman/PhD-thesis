%%
%% This is file `memory.sty',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% memory.dtx  (with options: `memory')
%% 
%% This is a generated file.
%% 
%% Copyright (C) 2013 by Song Zhiwei <songzw@gmail.com>
%% 
%% This file may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License, either version 1.3c of this license
%% or (at your option) any later version. The latest version of this
%% license is in:
%% 
%%    http://www.latex-project.org/lppl.txt 32
%% 
%% and version 1.3c or later is part of all distributions of LaTeX
%% version 2006/05/20 or later.
%% 
\NeedsTeXFormat{LaTeX2e}[2003/12/01]
\ProvidesPackage{memory2}
  [2013/05/13 v1.2 containers for data of object and array in LaTeX]

\ExplSyntaxOn
% \matchpattern[+][*]{<pattern>}{<target>}<result>
% where + denotes using a stored pattern and * using a stored target.
\NewDocumentCommand{\matchpattern}{t+ s m m m}
 {
  \IfBooleanTF{#1}
   {% use stored pattern
    \IfBooleanTF{#2}
     {% expand the argument
      \joao_matchpattern:nVNN #3 #4 #5 \regex_match:NnT
     }
     {% explicit argument
      \joao_matchpattern:nnNN #3 { #4 } #5 \regex_match:NnT
     }
   }
   {% use explicit pattern
    \IfBooleanTF{#2}
     {% expand the argument
      \joao_matchpattern:nVNN { #3 } #4 #5 \regex_match:nnT
     }
     {
      \joao_matchpattern:nnNN { #3 } { #4 } #5 \regex_match:nnT
     }
   }
 }

\NewDocumentCommand{\definepattern}{mm}
 {
  \regex_set:Nn #1 { #2 }
 }

\clist_new:N \l__joao_matchpattern_tmp_clist

\cs_new_protected:Nn \joao_matchpattern:nnNN
 {% #4 is either \regex_match:NnT or \regex_match:nnT
  % #1 is the pattern (either stored or explicit)
  % #2 is the target (either stored or explicit)
  % #3 is the macro to hold the result
  \clist_clear:N \l__joao_matchpattern_tmp_clist  
  \clist_map_inline:nn { #2 }
   {
    #4 { #1 } { ##1 }
     {
      \clist_put_right:Nn \l__joao_matchpattern_tmp_clist { {##1} }
     }
   }
  \clist_set_eq:NN #3 \l__joao_matchpattern_tmp_clist
 }
\cs_generate_variant:Nn \joao_matchpattern:nnNN { nV }

\ExplSyntaxOff


\def\newalias#1(#2):=#3(#4){%
  [#1] [#2] [#3] [#4]\par
  \expandafter\ifcsname @#1@alias\endcsname\else\expandafter\gdef\csname @#1@alias\endcsname{}\fi
  \expandafter\edef\csname @#1@alias\endcsname{{#2,#3,#4}\csname @#1@alias\endcsname}
}
\def\listalias#1{%
  \@for\@item:=\csname @#1@alias\endcsname\do{[[\@item]]\par}
}


\newif\ifmemorybre@k
\def\memoryforbreak{\memorybre@kfalse}
\long\def\@memoryfor#1:=#2\do#3{%
  \memorybre@ktrue
  \@for#1:=#2\do{\ifmemorybre@k#3\fi}%
}

\def\ifdatadefinedand#1#2(#3)#4#5{%
  % \typeout{MEMORY LIST #1(#2)}%
  \@memoryfor#1:=#3\do{%
    % \typeout{MEMORY LIST -- #1(\arg)}%
    \ifmemorybre@k%
      \ifcsname @\expanded{#2}@\expanded{#1}@memory\endcsname\else\memorybre@kfalse\fi%
    \fi
  }%
  \ifmemorybre@k\expandafter#4\else\expandafter#5\fi%
}
\def\ifdatadefinedor#1#2(#3)#4#5{%
  % \typeout{MEMORY LIST #1(#2)}%
  \@memoryfor#1:=#3\do{%
    % \typeout{MEMORY LIST -- #1(\arg)}%
    \ifcsname @\expanded{#2}@\expanded{#1}@memory\endcsname#4\memoryforbreak\fi%
  }%
  \ifmemorybre@k#5\fi%
}
\def\ifdatadefined#1(#2)#3#4{\ifcsname @\expanded{#1}@\expanded{#2}@memory\endcsname#3\else#4\fi}
\def\ifdataequal#1(#2)#3#4#5{\ifdatadefined#1(#2){%
      \edef\@data@tmp{\csname @\expanded{#1}@\expanded{#2}@memory\endcsname}%
      \if\@data@tmp#3\relax#4\else#5\fi%
    }{#5}}
\def\datadefault#1(#2){\ifdatadefined{#1}(#2){\csname the#1\endcsname(#2)}{\csname the#1\endcsname()}}

\def\set@memory#1#2=#3{\if#1*\expandafter\gdef\csname#2\endcsname{#3}%
                         \else\expandafter\def\csname#2\endcsname{#3}\fi}
\def\eset@memory#1#2=#3{\if#1*\expandafter\xdef\csname#2\endcsname{#3}%
                         \else\expandafter\protected@edef\csname#2\endcsname{#3}\fi}
\def\etest@memory#1#2:{\@ifnextchar={\eset@memory{#1}{#2}}
                                    {\PackageError{memory}{Please use “=” or “:=”.}{}}}
\def\data@memory#1#2{\@ifnextchar={\set@memory{#1}{@#2@memory}}
                                  {\@ifnextchar:{\etest@memory{#1}{@#2@memory}}
                                                {\PackageError{memory}{Please use \string\the#2 macro instead of \string\#2.}{}}}}
\def\array@memory#1#2(#3){\data@memory{#1}{#2@#3}}
\def\newdata@memory#1#2{\@ifundefined{#2}
  {\if#1*
      \expandafter\gdef\csname#2\endcsname{\array@memory{#1}{#2}}
      \expandafter\gdef\csname the#2\endcsname(##1){\csname @#2@\expanded{##1}@memory\endcsname}
   \else
      \expandafter\def\csname#2\endcsname{\array@memory{#1}{#2}}
      \expandafter\def\csname the#2\endcsname(##1){\csname @#2@\expanded{##1}@memory\endcsname}
   \fi}
  {\PackageWarningNoLine{memory}{`#2' already defined.
                                 Macro `newdata' ignored!}}}
\def\newdata{\@ifnextchar*{\newdata@memory}{\newdata@memory{}}}
\endinput
%%
%% End of file `memory.sty'.
